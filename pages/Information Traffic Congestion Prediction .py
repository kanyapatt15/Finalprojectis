import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import OneHotEncoder
from sklearn.ensemble import RandomForestRegressor
import joblib

# Apply custom styling
st.markdown(
    """
    <style>
    @import url('https://fonts.googleapis.com/css2?family=Itim&display=swap');      

    * {}

    .block-container {
        max-width: 1000px;
        padding: 20px;
    }

    .stApp {
        background-color: #0000; /* ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á */
        color: white; /* ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ */
    }

    /* ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡πÉ‡∏´‡πâ‡πÉ‡∏´‡∏ç‡πà‡∏Ç‡∏∂‡πâ‡∏ô */
    .custom-header {
        font-size: 45px !important; 
        font-weight: bold;
        text-align: center;
        color: #F6EACB;
    }
    .custom-subheader {
        font-size: 30px !important;
        font-weight: bold;
        color: #F1D3CE;
    }
    .custom-text {
        font-size: 22px !important;
        color: #FFFFFF;
    }
    .footer {
        font-size: 18px;
        text-align: center;
        margin-top: 50px;
        color: #EECAD5;
    }
    </style>
    """,
    unsafe_allow_html=True
)

# Page Content
st.markdown("<p class='custom-header'>üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Neural Network ‡πÅ‡∏•‡∏∞ Feature ‡∏Ç‡∏≠‡∏á Dataset</p>", unsafe_allow_html=True)

st.markdown("<p class='custom-subheader'>üîπ ‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏Ç‡∏≠‡∏á‡∏ä‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</p>", unsafe_allow_html=True)
st.markdown("<p class='custom-text'>‡∏ä‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ ChatGPT ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏•‡∏≠‡∏á‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏£‡∏≤‡∏à‡∏£</p>", unsafe_allow_html=True)



st.markdown("<p class='custom-subheader'>‚öôÔ∏è Feature ‡∏Ç‡∏≠‡∏á Dataset</p>", unsafe_allow_html=True)
st.markdown(
    """
    <ul class='custom-text'>
        <li><b>Location:</b> ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏£‡∏≤‡∏à‡∏£‡∏ï‡∏¥‡∏î‡∏Ç‡∏±‡∏î</li>
        <li><b>Time:</b> ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏≤‡∏à‡∏£</li>
        <li><b>Accident_Reported:</b> ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏ (0 = ‡πÑ‡∏°‡πà‡∏°‡∏µ, 1 = ‡∏°‡∏µ)</li>
        <li><b>Weather_Condition:</b> ‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏® ‡πÄ‡∏ä‡πà‡∏ô ‡∏ù‡∏ô‡∏ï‡∏Å ‡∏´‡∏°‡∏≠‡∏Å ‡πÅ‡∏î‡∏î‡∏à‡πâ‡∏≤</li>
        <li><b>Traffic_Density:</b> ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ô‡∏≤‡πÅ‡∏ô‡πà‡∏ô‡∏Ç‡∏≠‡∏á‡∏à‡∏£‡∏≤‡∏à‡∏£ (‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå)</li>
    </ul>
    """,
    unsafe_allow_html=True
)
st.markdown("<p class='custom-subheader'>üìå ‡∏ó‡∏§‡∏©‡∏é‡∏µ‡∏Ç‡∏≠‡∏á‡∏≠‡∏±‡∏•‡∏Å‡∏≠‡∏£‡∏¥‡∏ó‡∏∂‡∏° Neural Network</p>", unsafe_allow_html=True)
st.markdown(
    """
    <ul class='custom-text'>
        <li><b>Neural Network:</b> Neural Network ‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏µ‡∏¢‡∏ô‡πÅ‡∏ö‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏™‡∏°‡∏≠‡∏á‡∏°‡∏ô‡∏∏‡∏©‡∏¢‡πå ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏ä‡∏±‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏•‡∏•‡πå‡∏õ‡∏£‡∏∞‡∏™‡∏≤‡∏ó (Neurons) ‡∏´‡∏•‡∏≤‡∏¢‡∏ä‡∏±‡πâ‡∏ô ‡∏ã‡∏∂‡πà‡∏á‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô‡πÑ‡∏î‡πâ</li>
        <ul class='custom-text'>
            <li><b>‡∏ä‡∏±‡πâ‡∏ô Input Layer:</b> ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤ ‡πÄ‡∏ä‡πà‡∏ô ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏£‡∏≤‡∏à‡∏£, ‡πÄ‡∏ß‡∏•‡∏≤, ‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®</li>
            <li><b>‡∏ä‡∏±‡πâ‡∏ô Hidden Layers:</b> ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡πÄ‡∏ä‡∏¥‡∏á‡πÄ‡∏™‡πâ‡∏ô‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ Activation Functions ‡πÄ‡∏ä‡πà‡∏ô ReLU</li>
            <li><b>‡∏ä‡∏±‡πâ‡∏ô Output Layer:</b> ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏≠‡∏≠‡∏±‡∏î‡∏Ç‡∏≠‡∏á‡∏à‡∏£‡∏≤‡∏à‡∏£</li>
        </ul>
    </ul>
    """,
    unsafe_allow_html=True
)
st.markdown("<p class='custom-subheader'>üõ†Ô∏è ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏°‡πÄ‡∏î‡∏• Neural Network</p>", unsafe_allow_html=True)
st.markdown(
    """
    <ul class='custom-text'>
        <li>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏¢‡πÑ‡∏õ‡πÅ‡∏•‡∏∞‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡πà‡∏≤‡∏°‡∏±‡∏ò‡∏¢‡∏ê‡∏≤‡∏ô</li>
        <li>‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ One-Hot Encoding</li>
        <li>‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡πâ‡∏ß‡∏¢ StandardScaler</li>
        <li>‡πÅ‡∏ö‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô 80% ‡∏ä‡∏∏‡∏î‡∏ù‡∏∂‡∏Å ‡πÅ‡∏•‡∏∞ 20% ‡∏ä‡∏∏‡∏î‡∏ó‡∏î‡∏™‡∏≠‡∏ö</li>
    </ul>
    """,
    unsafe_allow_html=True
)

st.markdown("<p class='custom-subheader'>ü§ñ ‡∏Å‡∏≤‡∏£‡∏ù‡∏∂‡∏Å‡∏™‡∏≠‡∏ô Neural Network</p>", unsafe_allow_html=True)
st.markdown(
    """
    <ul class='custom-text'>
        <li>‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏•‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ keras.Sequential()</li>
        <li>‡πÄ‡∏û‡∏¥‡πà‡∏° 3 Hidden Layers:
            <ul class='custom-text'>
                <li>Layer 1: Dense(64, activation='relu')</li>
                <li>Layer 2: Dense(32, activation='relu')</li>
                <li>Layer 3: Dense(16, activation='relu')</li>
            </ul>
        </li>
        <li>‡∏ä‡∏±‡πâ‡∏ô Output: Dense(1) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ô‡∏≤‡πÅ‡∏ô‡πà‡∏ô</li>
        <li>‡πÉ‡∏ä‡πâ optimizer='adam' ‡πÅ‡∏•‡∏∞ loss='mean_squared_error'</li>
        <li>‡∏ù‡∏∂‡∏Å‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏î‡πâ‡∏ß‡∏¢ 10 epochs ‡πÅ‡∏•‡∏∞ batch_size=16</li>
    </ul>
    """,
    unsafe_allow_html=True
)

st.markdown("<p class='custom-subheader'>üìà ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏ú‡∏•‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÇ‡∏°‡πÄ‡∏î‡∏•</p>", unsafe_allow_html=True)
st.markdown(
    """
    <ul class='custom-text'>
        <li>‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∏‡∏î‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏î‡∏ú‡∏•‡∏î‡πâ‡∏ß‡∏¢ MSE ‡πÅ‡∏•‡∏∞ MAE</li>
        <li>‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÇ‡∏°‡πÄ‡∏î‡∏•‡πÉ‡∏ô‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ô‡∏≤‡πÅ‡∏ô‡πà‡∏ô‡∏à‡∏£‡∏≤‡∏à‡∏£‡∏ï‡∏≤‡∏°‡∏õ‡∏±‡∏à‡∏à‡∏±‡∏¢‡∏ï‡πà‡∏≤‡∏á ‡πÜ</li>
    </ul>
    """,
    unsafe_allow_html=True
)

# Model comparison
st.markdown("<p class='custom-subheader'>üìä ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡πÇ‡∏°‡πÄ‡∏î‡∏•</p>", unsafe_allow_html=True)
model_comparison = pd.DataFrame({
    "‡πÇ‡∏°‡πÄ‡∏î‡∏•": ["Linear Regression", "Extra Trees", "Random Forest", "Neural Network"],
    "‡∏Ç‡πâ‡∏≠‡∏î‡∏µ": [
        "‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏ï‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢",
        "‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏î Overfitting ‡πÑ‡∏î‡πâ‡∏î‡∏µ",
        "‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡∏™‡∏π‡∏á‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô",
        "‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô‡πÑ‡∏î‡πâ‡∏î‡∏µ"
    ],
    "‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏µ‡∏¢": [
        "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô‡πÑ‡∏î‡πâ‡∏î‡∏µ",
        "‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏•‡∏±‡∏á‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏™‡∏π‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏°‡∏≤‡∏Å",
        "‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏ù‡∏∂‡∏Å‡∏ô‡∏≤‡∏ô",
        "‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏°‡∏≤‡∏Å‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ù‡∏∂‡∏Å"
    ]
})
st.markdown(model_comparison.to_html(index=False), unsafe_allow_html=True)

# Footer
st.markdown("<p class='footer'>‡∏à‡∏±‡∏î‡∏ó‡∏≥‡πÇ‡∏î‡∏¢ ‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏Å‡∏±‡∏ç‡∏ç‡∏≤‡∏û‡∏±‡∏ä‡∏£ ‡∏Å‡πâ‡∏≠‡∏ô‡∏ô‡∏¥‡∏• | ‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤: 6404062620125</p>", unsafe_allow_html=True)

